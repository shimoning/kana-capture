"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const q=require("./utilities/diff.js"),p=require("./utilities/extractor.js"),y=require("./utilities/kanaConverter.js");var _=(c=>(c[c.REALTIME=0]="REALTIME",c[c.ENTER=1]="ENTER",c))(_||{});function w(c,m,n={observeInterval:30,debug:!1,realtime:!0,enter:!1,clearOnInputEmpty:!1,captureablePatterns:p.CaptureableCharacterType.HIRAGANA}){const k=p.generateCaptureableRegExp(n.captureablePatterns??p.CaptureableCharacterType.HIRAGANA),a=typeof c=="string"?document.querySelector(c):c;if(!a)throw new Error("input element not found");let b=0;function H(){const e=n.realtime&&(n.realtime===!0||n.realtime instanceof HTMLInputElement&&n.realtime.checked),t=n.enter&&(n.enter===!0||n.enter instanceof HTMLInputElement&&n.enter.checked);b=e||!t?0:1}const l=[],A=e=>{if(typeof e=="string"){const t=document.querySelectorAll(e);for(const d of t)l.push({element:d,type:y.KanaType.Hiragana})}else e instanceof HTMLInputElement?l.push({element:e,type:y.KanaType.Hiragana}):l.push({element:e.element,type:e.type??y.KanaType.Hiragana})};if(Array.isArray(m))for(const e of m)A(e);else A(m);let u=!1,s="",v="",o="";const i=new Array(l.length).fill("");function I(){r("reset"),s="",v="",o="";for(let e=0;e<l.length;e++)i[e]=""}function h(){s=a.value,l.forEach(({element:e},t)=>{i[t]=e.value}),r("setup",a.value,{defaultString:s,activeOutputs:l})}let f;function R(){r("start",{timer:f}),!f&&(f=setInterval(()=>{H(),S()},n.observeInterval??30))}function C(){r("end",{timer:f}),f&&(clearInterval(f),f=void 0)}function S(){const e=a.value;if(r("observe",{observing:u,inputString:e,defaultString:s,currentString:v,outputValues:i}),e==="")return;const t=q.diff(s,e);v!==t.diff&&(v=t.diff,u&&E(v))}function E(e){r("set",{defaultString:s,string:e,inputValue:o,outputValues:i});const t=p.extractor({input:e,patterns:k});t.length===e.length&&(o=t),l.forEach(({element:d,type:L},g)=>{const T=y.kanaConverter(L,o);r("converted",{type:L,string:e,inputValue:o,after:T,before:i[g]}),b===0?d.value=i[g]+T:b===1&&(d.dataset.kana=i[g]=T)})}function M(){l.forEach(({element:e})=>{e.dataset.kana&&(e.value+=e.dataset.kana,e.removeAttribute("data-kana"))})}function r(e,...t){if(n.debug){if(t.length===0){console.info("debug",{message:e});return}console.info("debug",{message:e},...t)}}a.addEventListener("focus",()=>{r("focus"),h()}),a.addEventListener("blur",()=>{r("blur"),C()}),a.addEventListener("compositionstart",e=>{r("compositionstart",{e}),h(),R(),u=!0}),a.addEventListener("compositionend",e=>{r("compositionend",{e}),C(),E(o),I(),u=!1}),a.addEventListener("keydown",e=>{r("keydown",{observing:u,e})}),a.addEventListener("keyup",e=>{if(r("keyup",{observing:u,e}),e.code==="Enter")n.clearOnInputEmpty&&a.value===""?(I(),E("")):b===1&&M();else if(!u){const t=a.value.slice(-1),d=p.extractor({input:t,patterns:k});t===d&&(h(),E(t))}})}exports.CaptureableCharacterType=p.CaptureableCharacterType;exports.KanaType=y.KanaType;exports.OutputTiming=_;exports.setupObserver=w;
//# sourceMappingURL=observer.js.map
