"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const K=require("./utilities/diff.js"),p=require("./utilities/extractor.js"),b=require("./utilities/kanaConverter.js");var S=(i=>(i[i.REALTIME=0]="REALTIME",i[i.ENTER=1]="ENTER",i))(S||{});function O(i,y,n={observeInterval:30,debug:!1,realtime:!0,enter:!1,clearOnInputEmpty:!1,captureablePatterns:p.CaptureableCharacterType.HIRAGANA}){const A=p.generateCaptureableRegExp(n.captureablePatterns??p.CaptureableCharacterType.HIRAGANA),a=typeof i=="string"?document.querySelector(i):i;if(!a)throw new Error("input element not found");let m=0;const g=!(n.realtime instanceof HTMLInputElement)&&!(n.enter instanceof HTMLInputElement);function L(){const e=n.realtime&&(n.realtime===!0||n.realtime instanceof HTMLInputElement&&n.realtime.checked),t=n.enter&&(n.enter===!0||n.enter instanceof HTMLInputElement&&n.enter.checked);m=e||!t?0:1}g&&L(),r("outputTimingIsStatic",{outputTimingIsStatic:g});const u=[],C=e=>{if(typeof e=="string"){const t=document.querySelectorAll(e);for(const d of t)u.push({element:d,type:b.KanaType.Hiragana})}else e instanceof HTMLInputElement?u.push({element:e,type:b.KanaType.Hiragana}):u.push({element:e.element,type:e.type??b.KanaType.Hiragana})};if(Array.isArray(y))for(const e of y)C(e);else C(y);let c=!1,s="",v="",o="";const l=new Array(u.length).fill("");function k(){r("reset"),s="",v="",o="";for(let e=0;e<u.length;e++)l[e]=""}function T(){s=a.value,u.forEach(({element:e},t)=>{l[t]=e.value}),r("setup",a.value,{defaultString:s,activeOutputs:u})}let f;function M(){r("start",{timer:f}),!f&&(f=setInterval(()=>{g||L(),R()},n.observeInterval??30))}function H(){r("end",{timer:f}),f&&(clearInterval(f),f=void 0)}function R(){const e=a.value;if(r("observe",{observing:c,inputString:e,defaultString:s,currentString:v,outputValues:l}),e==="")return;const t=K.diff(s,e);v!==t.diff&&(v=t.diff,c&&E(v))}function E(e){r("set",{defaultString:s,string:e,inputValue:o,outputValues:l});const t=p.extractor({input:e,patterns:A});t.length===e.length&&(o=t),u.forEach(({element:d,type:_},h)=>{const I=b.kanaConverter(_,o);r("converted",{type:_,string:e,inputValue:o,after:I,before:l[h]}),m===0?d.value=l[h]+I:m===1&&(d.dataset.kana=l[h]=I)})}function q(){u.forEach(({element:e})=>{e.dataset.kana&&(e.value+=e.dataset.kana,e.removeAttribute("data-kana"))})}function r(e,...t){if(n.debug){if(t.length===0){console.info("debug",{message:e});return}console.info("debug",{message:e},...t)}}a.addEventListener("focus",()=>{r("focus"),T()}),a.addEventListener("blur",()=>{r("blur"),H()}),a.addEventListener("compositionstart",e=>{r("compositionstart",{e}),T(),M(),c=!0}),a.addEventListener("compositionend",e=>{r("compositionend",{e}),H(),E(o),k(),c=!1}),a.addEventListener("beforeinput",e=>{if(r("beforeinput",{observing:c,e}),!c&&!e.isComposing&&e.data){const t=e.data,d=p.extractor({input:t,patterns:A});t&&t===d&&(T(),E(t))}}),a.addEventListener("keyup",e=>{r("keyup",{observing:c,e}),e.code==="Enter"&&(n.clearOnInputEmpty&&a.value===""?(k(),E("")):m===1&&q())})}exports.CaptureableCharacterType=p.CaptureableCharacterType;exports.KanaType=b.KanaType;exports.OutputTiming=S;exports.setupObserver=O;
//# sourceMappingURL=index.js.map
